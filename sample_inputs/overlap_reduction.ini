# This is an example INI input file for the `casino' mode specifying overlap reduction of too tightly packed hard
# spheres (over maximal 0.74 packing fraction), followed by an integration run with short thermalization phase.
#
# The general information about input file, its structure and meaning of parameters are mainly gathered in
# integration.ini file. This input file only supplements it with information about overlap reduction mode.

initialDimensions = 7 7 7
initialArrangement = lattice default
numOfParticles = 512

# All runs share "temperature", "pressure" and "moveTypes", so we set it globally here. For the integration run we
# change scaling to delta triclinic to facilitate full crystalline structure relaxation.
temperature = 1
pressure = 20
moveTypes = translation 0.1

seed = 1234
shapeName = Sphere
shapeAttributes = 0.5
interaction = hard
scalingThreads = 4
domainDivisions = 2 2 1
saveOnSignal = true


# Overlap reduction runs are specified by INI sections "\[overlaps.[run name]\]". The overlap reduction run uses both
# particle and scaling moves to remove overlaps. If a move increases the number of overlaps it is always rejected, while
# move recuding overlaps are always accepted. On the other hand, when the number of overlaps does not change, the move
# is accepted according to Metropolis criterion. Overlap reduction run terminates as soon as all overlaps have been
# eliminated. Overlap reduction can output the same data as integration run, apart from ensemble averages.
[overlaps.too_dense_cubic]

scalingType = delta V
volumeStepSize = 0.5

# How often observable snapshots should be taken (same as in an integration run)
snapshotEvery = 1000

# Interaction which can be used to help eliminate the overlaps. Only interactions available for a shape specified the
# general section are supported. This interaction will be combined with main interaction and it will be done only for
# this run. Preferably it should be light soft repulsion, nonzero if and only if the particles overlap. For spheres,
# "square_inverse_core" works well. Too strong repulsion can result in rapid expansion, while too weak may not help.
helperInteraction = square_inverse_core 2 1

# Output-related parameters, same as in an integration run
packingFilename = packing_ov_relax.ramsnap
xyzFilename = packing_ov_relax.xyz
observableSnapshotFilename = observable_ov_relax.txt
observables = numberDensity , inline packingFraction , compressibilityFactor


# Overlap relaxation mode is followed by an integration run used to gather the averages.

[integration.solid]
scalingType = delta triclinic
volumeStepSize = 0.001
thermalisationCycles = 100000
averagingCycles = 900000
averagingEvery = 10000
snapshotEvery = 100
packingFilename = packing_solid.ramsnap
xyzFilename = xyzFilename.nb
observableSnapshotFilename = observable_solid.txt
observables = numberDensity , inline packingFraction , compressibilityFactor